<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zigbee.dao.ZigbeeReceiveDataMapper" >
  <resultMap id="BaseResultMap" type="com.zigbee.pojo.ZigbeeReceiveData" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="temperature" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="humidity" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, temperature, humidity, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zigbee_receive_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zigbee_receive_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zigbee.pojo.ZigbeeReceiveData" >
    insert into zigbee_receive_data (id, temperature, humidity, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{temperature,jdbcType=VARCHAR}, #{humidity,jdbcType=VARCHAR}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.zigbee.pojo.ZigbeeReceiveData" >
    insert into zigbee_receive_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
      <if test="humidity != null" >
        humidity,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="humidity != null" >
        #{humidity,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zigbee.pojo.ZigbeeReceiveData" >
    update zigbee_receive_data
    <set >
      <if test="temperature != null" >
        temperature = #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="humidity != null" >
        humidity = #{humidity,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <!--<if test="updateTime != null" > -->
        update_time = now(),
      <!--</if>-->
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zigbee.pojo.ZigbeeReceiveData" >
    update zigbee_receive_data
    set temperature = #{temperature,jdbcType=VARCHAR},
      humidity = #{humidity,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getLastZigbeeData" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from zigbee_receive_data
    order by id DESC
    limit 1
  </select>
</mapper>